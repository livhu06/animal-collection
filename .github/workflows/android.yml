name: Build Android
run-name: Creating Production Ready Android App ðŸš€
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        # TODO: add your branch to checkout
        with:
          ref: main

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "jetbrains"
          java-version: "21.0.3"

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 23.4.0

      - name: install dependencies
        run: npm ci

      - name: Create Build Folder
        run: npm run build

      - name: Capacitor update
        run: npx cap update

      - name: Capacitor copy
        run: npx cap copy
      
      - name: Build app bundle
        run: cd android && chmod +x ./gradlew && ./gradlew bundle && ./gradlew assembleDebug

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/animalCollections.jks.base64
          base64 -d android/animalCollections.jks.base64 > android/animalCollections.decrypted.jks

      - name: Sign dev build
        run: jarsigner -keystore android/animalCollections.decrypted.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/release/app-release-signed.aab ./android/app/release/app-release.aab AnimalCollect

      - name: Check folder content of android output
        run: ls ./android/app/release

      - name: Set Tag
        id: current-datetime
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d-%H_%M_%S%z')" >> "$GITHUB_OUTPUT"

      - name: Build Release
        shell: bash
        run: |
          hub release create ${{ steps.current-datetime.outputs.CURRENT_DATETIME }} \
          -m ${{ steps.current-datetime.outputs.CURRENT_DATETIME }} \
          -a ./android/app/release/app-release-signed.aab \
          -a ./android/app/build/outputs/apk/debug/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}